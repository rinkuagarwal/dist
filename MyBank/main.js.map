{"version":3,"sources":["./src/app/customer-update/customer-update.component.ts","./src/app/customer-update/customer-update.component.html","./src/app/search-all/search-all.component.ts","./src/app/search-all/search-all.component.html","./src/app/customerland/customerland.component.ts","./src/app/customerland/customerland.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/about-us/about-us.component.ts","./src/app/about-us/about-us.component.html","./src/app/employeeland/employeeland.component.ts","./src/app/employeeland/employeeland.component.html","./src/app/Account.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/create-account/create-account.component.ts","./src/app/create-account/create-account.component.html","./src/app/search-account/search-account.component.ts","./src/app/search-account/search-account.component.html","./src/app/models/user.model.ts","./src/app/withdraw/withdraw.component.ts","./src/app/withdraw/withdraw.component.html","./src/app/deposit/deposit.component.ts","./src/app/deposit/deposit.component.html","./src/app/app.module.ts","./src/app/login.service.ts","./src/app/update-account/update-account.component.ts","./src/app/update-account/update-account.component.html","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/footer/footer.component.ts","./src/app/footer/footer.component.html","./src/app/help/help.component.ts","./src/app/help/help.component.html","./src/app/account.service.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/Address.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Account } from '../Account';\r\nimport { AccountService } from '../account.service';\r\nimport swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-customer-update',\r\n  templateUrl: './customer-update.component.html',\r\n  styleUrls: ['./customer-update.component.css']\r\n})\r\nexport class CustomerUpdateComponent implements OnInit {\r\n  title: String = \"Update Account Details\";\r\n  account: Account = new Account();\r\n  accountArray: any;\r\n  currentStatus: any;\r\n\r\n\r\n  constructor(private accountService: AccountService) { }\r\n  //-------------search account details of customer by account number---------------\r\n  searchAccountByNumber(number: any) {\r\n\r\n    let URL = 'http://localhost:8081/account/';\r\n    let accountNumber = (<HTMLInputElement>document.getElementById('number')).value;\r\n    if (accountNumber) {\r\n      URL = URL + 'number/' + accountNumber;\r\n      const observable = this.accountService.getAccountbyNumber(accountNumber);\r\n      observable.subscribe(response => {\r\n        this.accountArray = response;\r\n        // this.currentStatus = this.accountArray.status;\r\n        if (this.accountArray) {\r\n          this.account = this.accountArray\r\n        }\r\n        else {\r\n          swal.fire({\r\n            text: \"Enter a valid account number\",\r\n            icon: 'warning'\r\n          });\r\n        }\r\n      },\r\n        (error: any) => {\r\n          console.log(error);\r\n          swal.fire({\r\n            text: \"Error occured...! Try again\",\r\n            icon: 'error'\r\n          });\r\n        })\r\n    }\r\n    else {\r\n      swal.fire({\r\n        text: \"Please enter account number\",\r\n        icon: 'warning',\r\n      })\r\n    }\r\n  }\r\n  // -------------check if argument is number or not--------------\r\n  isNumber(n: any) {\r\n    return !isNaN(parseFloat(n)) && !isNaN(n - 0);\r\n  }\r\n\r\n  //------------------update the customer account details---------\r\n  update() {\r\n\r\n    if (this.account.mobileNumber.length < 10 || this.account.mobileNumber.length > 10) {\r\n      swal.fire(\"Required length for mobile number is 10\");\r\n    }\r\n    else if (!this.isNumber(this.account.mobileNumber)) {\r\n      swal.fire(\"Mobile number should be number!\")\r\n    }\r\n    else if (!this.isNumber(this.account.address.pinCode)) {\r\n      swal.fire(\"Pincode should be number!\")\r\n    }\r\n    else {\r\n      const promise = this.accountService.updateAccount(this.account, this.account.id);\r\n      promise.subscribe((response: any) => {\r\n        console.log(response);\r\n        this.accountArray[response];\r\n\r\n        swal.fire({\r\n          title: 'Do you want to update the changes?',\r\n          showDenyButton: true,\r\n          confirmButtonText: `Update`,\r\n          denyButtonText: `Don't Update`,\r\n        }).then((result) => {\r\n\r\n          if (result.isConfirmed) {\r\n            swal.fire('Updated!', '', 'success')\r\n          } else if (result.isDenied) {\r\n            swal.fire('Changes are not updated', '', 'info')\r\n          }\r\n        })\r\n\r\n      },\r\n\r\n        error => {\r\n          console.log(error);\r\n          swal.fire({\r\n            icon: \"error\",\r\n            text: \"Update not possible\"\r\n          });\r\n\r\n        })\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<nav style=\"background-color: rgb(230, 227, 227);height: 25px;\">\r\n\r\n  <a\r\n    class=\"nav-link ml-auto\"\r\n    style=\"padding-top: 0px;float:right;padding-right: 23px;\"\r\n    routerLink=\"/customer\"\r\n    routerLinkActive=\"active\"\r\n    ><b>Back</b></a\r\n  >\r\n\r\n</nav>\r\n<form class=\"createAccount\" id='createAccount'style=\"margin-top:30px\" >\r\n  <h5 style=\"font-weight: bold;font-size:x-large; color:  #0450a0;\">Update Account</h5>\r\n  <br>\r\n  <div class=\"row fieldRow \" style=\"color:  #0450a0;\">\r\n    <div class=\"col-sm-12\" style=\"color:  #0450a0;\">\r\n      <label for=\"lname\">AccountNumber<span>*</span></label>\r\n      <input [(ngModel)]='account.number' class=\"form-control\" id='number' placeholder=\"number\" name=\"number\">\r\n      <br>\r\n\r\n      <button class=\"btn btn-primary\" (click)=\"searchAccountByNumber(account.number)\" style=\"width:1000px\">Get Details</button>\r\n\r\n    </div>\r\n  </div>\r\n  <div class=\"row fieldRow\" style=\"color:  #0450a0;\">\r\n    <div class=\"col-sm-6\">\r\n      <label >First Name</label>\r\n      <input [(ngModel)]='account.firstName' maxlength=100 type=\"text\" class=\"form-control\" id='fname'\r\n         name=\"name\" required>\r\n    </div>\r\n\r\n    <div class=\"col-sm-6\" style=\"color:  #0450a0;\">\r\n      <label>Last Name</label>\r\n      <input [(ngModel)]='account.lastName' class=\"form-control\" id='lname' name=\"lname\">\r\n\r\n    </div>\r\n  </div>\r\n  <div class=\"row fieldRow\" style=\"color:  #0450a0;\">\r\n    <div class=\"col-sm-6\">\r\n      <label >Email Id</label>\r\n      <input [(ngModel)]='account.email'  type=\"text\" class=\"form-control\" id='email'\r\n        name=\"email\" required>\r\n    </div>\r\n\r\n    <div class=\"col-sm-6\">\r\n      <label>Mobile Number</label>\r\n      <input [(ngModel)]='account.mobileNumber' class=\"form-control\" id='mobile'  name=\"mobile\" required>\r\n\r\n    </div>\r\n  </div>\r\n  <div class=\"row fieldRow\">\r\n    <div class=\"col-sm-6\" style=\"color:  #0450a0;\">\r\n      <label >Address H/No.</label>\r\n      <input [(ngModel)]='account.address.houseNumber' maxlength=100 type=\"text\" class=\"form-control\" id='house'\r\n         name=\"housename\" id=\"housename\" required>\r\n    </div>\r\n\r\n    <div class=\"col-sm-6\" style=\"color:  #0450a0;\">\r\n\r\n      <label >City</label>\r\n      <input [(ngModel)]='account.address.city' class=\"form-control\" name=\"City\" id=\"city\">\r\n\r\n    </div>\r\n  </div>\r\n  <div class=\"row fieldRow\">\r\n    <div class=\"col-sm-6\" style=\"color:  #0450a0;\">\r\n      <label >State</label>\r\n      <input [(ngModel)]='account.address.state' maxlength=100 type=\"text\" class=\"form-control\"\r\n        name=\"state\" id=\"state\" required>\r\n    </div>\r\n\r\n    <div class=\"col-sm-6\" style=\"color:  #0450a0;\">\r\n      <label >Pin Code</label>\r\n      <input [(ngModel)]='account.address.pinCode' class=\"form-control\" id=\"pincode\" name=\"pincode\">\r\n\r\n    </div>\r\n  </div>\r\n  <div class=\"row fieldRow\">\r\n    <div class=\"col-sm-6\"style=\"color:  #0450a0;\">\r\n      <label >Status</label>\r\n      <select [(ngModel)]='account.status' class=\"form-control\" id='status' name=\"status\" disabled >\r\n        <option value=\"ACTIVE\">ACTIVE</option>\r\n        <option value=\"INACTIVE\">INACTIIVE</option>\r\n        <option value=\"CLOSED\">CLOSED</option>\r\n      </select>\r\n    </div>\r\n\r\n\r\n    <div class=\"col-sm-6\" style=\"color:  #0450a0;\">\r\n      <label >Type</label>\r\n      <select [(ngModel)]='account.type' name=\"type\" class=\"form-control\" id='type' disabled >\r\n        <option value=\"SAVINGS\">SAVINGS</option>\r\n        <option value=\"CURRENT\">CURRENT</option>\r\n\r\n      </select>\r\n    </div>\r\n\r\n  </div>\r\n\r\n  <div class=\"row fieldRow\">\r\n    <div class=\"col-sm-6\" style=\"color:  #0450a0;\">\r\n      <label >Balance</label>\r\n      <input [(ngModel)]='account.balance' maxlength=100 type=\"text\" class=\"form-control\"\r\n         id=\"balance\" name=\"balance\" disabled required>\r\n    </div>\r\n\r\n  </div>\r\n\r\n  <button (click)='update()' class=\"btn btn-primary btn-block\" style=\"margin-bottom: 50px;width: 100%;\" >Save</button>\r\n\r\n</form>\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Account } from '../Account';\r\nimport { AccountService } from '../account.service';\r\nimport swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-search-all',\r\n  templateUrl: './search-all.component.html',\r\n  styleUrls: ['./search-all.component.css']\r\n})\r\nexport class SearchAllComponent implements OnInit {\r\n  accountArray: any;\r\n  account:Account=new Account();\r\n\r\n  constructor(private accountService: AccountService) { }\r\n//----------------getting details of employee using account number-----------\r\n  searchByAccountNumber(number: any) {\r\n    const observable = this.accountService.getAccountbyNumber(number);\r\n    observable.subscribe(response => {\r\n      console.log(response);\r\n      this.accountArray = [response];\r\n      if (this.accountArray[0] == undefined) {\r\n        swal.fire({\r\n          icon:\"error\",\r\n          text:\"No Account found for account number : \"+ number})\r\n\r\n      } else {\r\n        alert(\"Displaying..\")\r\n      }\r\n    },\r\n      error => {\r\n        swal.fire({\r\n          icon:\"error\",\r\n          text:\"Error Occured. Not able to search\"});\r\n      })\r\n\r\n  }\r\n//-------------fetch all the accounts details---------------\r\n  ngOnInit(): void {\r\n    const observable = this.accountService.getAllAccounts();\r\n    observable.subscribe(response => {\r\n      console.log(response);\r\n      this.accountArray = response;\r\n\r\n    });\r\n  }\r\n\r\n}\r\n","<body data-spy=\"scroll\" data-target=\".navbar\" data-offset=\"50\">\r\n  <nav style=\"background-color: rgb(230, 227, 227);height: 25px;\">\r\n\r\n    <a\r\n      class=\"nav-link ml-auto\"\r\n      style=\"padding-top: 0px;float:right;padding-right: 23px;\"\r\n      routerLink=\"/land\"\r\n      routerLinkActive=\"active\"\r\n      ><b>Back</b></a\r\n    >\r\n\r\n</nav>\r\n  <div\r\n    class=\"container-fluid bg-muted\"\r\n    style=\"padding-top: 10px; padding-bottom: 10px\"\r\n  ></div>\r\n\r\n  <div\r\n    id=\"searchBug\"\r\n    class=\"container tab-pane active\"\r\n    style=\"padding-bottom: 30px\"\r\n  >\r\n    <!-- input fields -->\r\n    <!-- <div class=\"row\">\r\n      <div class=\"col\">\r\n        <div class=\"form-group\">\r\n          <label for=\"uname\" class=\"mb-2 mr-sm-2\"><b>First Name : </b></label>\r\n          <br />\r\n          <input\r\n            type=\"text\"\r\n            [(ngModel)]=\"account.firstName\"\r\n            class=\"form-control mb-2 mr-sm-2\"\r\n            id=\"name\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"col\">\r\n        <div class=\"form-group\">\r\n          <label for=\"uname\" class=\"mb-2 mr-sm-2\"><b>Last Name : </b></label>\r\n          <br />\r\n          <input\r\n            type=\"text\"\r\n            [(ngModel)]=\"account.lastName\"\r\n            class=\"form-control mb-2 mr-sm-2\"\r\n            id=\"number\"\r\n          />\r\n        </div>\r\n      </div> -->\r\n\r\n      <div class=\"form-group form-inline\">\r\n        <label for=\"uname\" class=\"mb-2 mr-sm-2\"><b>Account number : </b></label>\r\n        <br />\r\n        <input\r\n        style=\"margin-top: 5px;\"\r\n          type=\"text\"\r\n          [(ngModel)]=\"account.number\"\r\n          class=\"form-control mb-2 mr-sm-2\"\r\n          id=\"number\"\r\n        />\r\n        <button\r\n          class=\"btn btn-primary btn-block searchBtn\"\r\n          style=\"width: 45%;margin-left: 50px;\"\r\n          (click)=\"searchByAccountNumber(account.number)\"\r\n        >\r\n          Search by Account Number\r\n        </button>\r\n        <div class=\"text-center\">\r\n          <button class=\"btn btn-primary btn-block searchBtn\" style=\"width:80px ; margin-left: 100px;\" (click)=\"ngOnInit()\">\r\n            Refresh\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n\r\n\r\n    <!-- table -->\r\n\r\n    <div class=\"table-responsive\">\r\n      <table\r\n        class=\"table table-bordered table-stripped\"\r\n        style=\"border: 2px solid #000000; margin-top: 50px\"\r\n      >\r\n        <thead class=\"thead-dark\">\r\n          <td>Account Number</td>\r\n          <td>First Name</td>\r\n          <td>Last Name</td>\r\n          <td>Created Date</td>\r\n          <td>Type</td>\r\n          <td>Status</td>\r\n          <td>Mobile Number</td>\r\n          <td>Email Id</td>\r\n\r\n\r\n        </thead>\r\n\r\n        <tbody>\r\n          <tr *ngFor=\"let account of accountArray; index as i\">\r\n            <td>{{ account.number }}</td>\r\n            <td>{{ account.firstName }}</td>\r\n            <td>{{ account.lastName }}</td>\r\n            <td>{{ account.createDate | date }}</td>\r\n            <td>{{ account.type }}</td>\r\n            <td>{{ account.status }}</td>\r\n            <td>{{ account.mobileNumber }}</td>\r\n            <td>{{ account.email }}</td>\r\n\r\n\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</body>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-customerland',\r\n  templateUrl: './customerland.component.html',\r\n  styleUrls: ['./customerland.component.css']\r\n})\r\nexport class CustomerlandComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<nav style=\"background-color: rgb(230, 227, 227);height: 25px;\">\r\n\r\n  <a\r\n    class=\"nav-link ml-auto\"\r\n    style=\"padding-top: 0px;float:right;padding-right: 23px;\"\r\n    routerLink=\"/\"\r\n    routerLinkActive=\"active\"\r\n    ><b>Back</b></a\r\n  >\r\n\r\n</nav>\r\n<div class=\"row fieldRow\">\r\n  <div class=\"col-sm-6\">\r\n    <img src=\"assets/img/about-img.svg\" class=\"img-fluid\" alt=\"\">\r\n  </div>\r\n<div class=\"col-sm-6\">\r\n  <div class=\"buttons\">\r\n    <button routerLink=\"/createaccount\" routerLinkActive=\"active\" class=\"btn btn-primary btn-block\">Create Account </button>\r\n  </div>\r\n  <div class=\"dropdown\">\r\n    <button id=\"transact\" class=\"btn btn-primary btn-block\">Transaction </button>\r\n  <div class=\"dropdown-content\">\r\n    <a href=\"#\"  routerLink=\"/deposit\" routerLinkActive=\"active\">Deposit</a>\r\n    <a href=\"#\" routerLink=\"/withdraw\" routerLinkActive=\"active\">Withdraw</a>\r\n</div>\r\n</div>\r\n  <div class=\"buttons\">\r\n    <button routerLink=\"/searchaccount\" routerLinkActive=\"active\" class=\"btn btn-primary btn-block\">Account Details</button>\r\n  </div>\r\n  <div class=\"buttons\">\r\n    <button routerLink=\"/update\" routerLinkActive=\"active\" class=\"btn btn-primary btn-block\">Update</button>\r\n  </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"home.component.css\">\r\n\r\n</head>\r\n<body>\r\n  <section id=\"hero\" class=\"clearfix\">\r\n    <div class=\"container\" data-aos=\"fade-up\">\r\n\r\n      <div class=\"hero-img\" data-aos=\"zoom-out\" data-aos-delay=\"200\">\r\n        <img src=\"assets/img/hero-img.svg\" alt=\"\" class=\"img-fluid\">\r\n      </div>\r\n\r\n      <div class=\"hero-info\" data-aos=\"zoom-in\" data-aos-delay=\"100\">\r\n        <h2>Welcome to the<br><span>IBM Bank</span><br>Services!</h2>\r\n        <div>\r\n          <a href=\"\" class=\"btn-get-started scrollto\" routerLink=\"/login\" routerLinkActive=\"active\">Employee Login</a>\r\n\r\n            <a href=\"\" class=\"btn-get-started scrollto\" routerLink=\"/customer\" routerLinkActive=\"active\">Customer Login</a>\r\n\r\n\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </section>\r\n</body>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-about-us',\r\n  templateUrl: './about-us.component.html',\r\n  styleUrls: ['./about-us.component.css']\r\n})\r\nexport class AboutUsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<section id=\"about\">\r\n  <div class=\"container\" data-aos=\"fade-up\">\r\n\r\n    <header class=\"section-header\">\r\n      <h3>About Us</h3>\r\n      <p>IBM is an Indian multinational, public sector banking and financial services statutory body, fostering the\r\n        nation’s 2.6 trillion-dollar economy and serving the hopes of its vast population.</p>\r\n    </header>\r\n\r\n    <div class=\"row about-container\">\r\n\r\n      <div class=\"col-lg-6 content order-lg-1 order-2\">\r\n        <p>\r\n          For IBM, the interests of the common man havealways remained at the core of its business.With a\r\n          customer-centric approach, the Bankhas designed products and services to meet the expectations of the\r\n          financial life cycle of its valued clientele. Keeping pace with the transforming landscape of the Indian\r\n          economy, SWIFT has broadened its digital base in the recent years.\r\n        </p>\r\n\r\n        <div class=\"icon-box\" data-aos=\"fade-up\" data-aos-delay=\"100\">\r\n          <div class=\"icon\"><i class=\"bi bi-card-checklist\"></i></div>\r\n          <h4 class=\"title\"><a href=\"\">Quick Start Account</a></h4>\r\n          <p class=\"description\">You can create a new account by yourself oe our employee can do that for you. Your\r\n            account will be activated after we have successfully completed the KYC.\r\n        </div>\r\n\r\n        <div class=\"icon-box\" data-aos=\"fade-up\" data-aos-delay=\"200\">\r\n          <div class=\"icon\"><i class=\"bi bi-brightness-high\"></i></div>\r\n          <h4 class=\"title\"><a href=\"\">Instant Fund Transfer</a></h4>\r\n          <p class=\"description\">You can instantly do fund transfer from anywhere at any time. IBM BANK\r\n            operates its Investment banking, Merchant banking & Brokerage businesses through IBM SECURITIES and its\r\n            Mutual Fund business through IBM Asset Management (India) Limited, both wholly owned subsidiaries of the\r\n            Bank.\r\n        </div>\r\n\r\n        <div class=\"icon-box\" data-aos=\"fade-up\" data-aos-delay=\"300\">\r\n          <div class=\"icon\"><i class=\"bi bi-calendar4-week\"></i></div>\r\n          <h4 class=\"title\"><a href=\"\">Our System</a></h4>\r\n          <p class=\"description\">IBM BANK, is a high quality, customer centric and service driven Bank. Since inception\r\n            in 2020, IBM BANK has grown into a ‘Full Service Commercial Bank’ providing a complete range of products,\r\n            services and technology driven digital offerings, catering to corporate, MSME & retail customers.  Headquartered in Mumbai, it has a pan-India presence across all 28 states and 9 Union Territories in\r\n            India including an IBU at GIFT City, and a Representative Office in Abu Dhabi.\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <div class=\"col-lg-6 background order-lg-2\" data-aos=\"zoom-in\">\r\n        <img src=\"assets/img/about-img.svg\" class=\"img-fluid\" alt=\"\">\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n  </div>\r\n</section><!-- End About Section -->\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-employeeland',\r\n  templateUrl: './employeeland.component.html',\r\n  styleUrls: ['./employeeland.component.css']\r\n})\r\nexport class EmployeelandComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<nav style=\"background-color: rgb(230, 227, 227);height: 25px;\">\r\n\r\n  <a\r\n    class=\"nav-link ml-auto\"\r\n    style=\"padding-top: 0px;float:right;padding-right: 23px;\"\r\n    routerLink=\"/login\"\r\n    routerLinkActive=\"active\"\r\n    ><b>Log Out</b></a\r\n  >\r\n\r\n</nav>\r\n<div class=\"row fieldRow\">\r\n  <div class=\"col-sm-6\">\r\n    <img src=\"assets/img/about-img.svg\" class=\"img-fluid\" alt=\"\">\r\n  </div>\r\n<div class=\"col-sm-6\">\r\n  <div class=\"buttons\">\r\n    <button routerLink=\"/createaccount\" routerLinkActive=\"active\" class=\"btn btn-primary btn-block\">Create Account </button>\r\n  </div>\r\n  <div class=\"buttons\">\r\n    <button routerLink=\"/searchall\" routerLinkActive=\"active\" class=\"btn btn-primary btn-block\">Accounts</button>\r\n  </div>\r\n  <div class=\"buttons\">\r\n    <button routerLink=\"/updateEmployee\" routerLinkActive=\"active\" class=\"btn btn-primary btn-block\">Update</button>\r\n  </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n","import { Address } from './Address';\r\nexport class Account{\r\n  id:String=\"\";\r\n  number:String='';\r\n  firstName:string = '';\r\n  mobileNumber:any;\r\n  email:any;\r\n  lastName:string='';\r\n  balance:number=0.0;\r\n  depositAmount:number=0.0;\r\n  createDate:Date=new Date();\r\n  status:string='ACTIVE';\r\n  type:string='SAVINGS';\r\n  address:Address=new Address;\r\n  withdrawAmount:number=0.0;\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'MyBank';\r\n}\r\n","<app-header></app-header>\r\n<router-outlet></router-outlet>\r\n<app-footer></app-footer>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Account } from '../Account';\r\nimport { Address } from '../Address';\r\nimport { AccountService } from '../account.service';\r\nimport swal from 'sweetalert2';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n@Component({\r\n  selector: 'app-create-account',\r\n  templateUrl: './create-account.component.html',\r\n  styleUrls: ['./create-account.component.css']\r\n})\r\nexport class CreateAccountComponent implements OnInit {\r\n  account: Account = new Account();\r\n  address: Address = new Address();\r\n  accountArray: any;\r\n  constructor(private accountservice: AccountService) { }\r\n// -------------check if argument is number or not--------------\r\n  isNumber(n: any) {\r\n    return !isNaN(parseFloat(n)) && !isNaN(n - 0);\r\n  }\r\n\r\n  //------------For storing data in database----------------\r\n  save() {\r\n\r\n    if (!this.account.firstName.trim()) {\r\n      swal.fire(\"Please provide First name\");\r\n    }\r\n    else if (!this.account.lastName.trim()) {\r\n      swal.fire(\"Please provide Last Name\");\r\n    }\r\n    else if (!this.account.email.trim()) {\r\n      swal.fire(\"Please provide email id\");\r\n    }\r\n    else if (this.account.mobileNumber.length<10 || this.account.mobileNumber.length>10){\r\n      swal.fire(\"Required length for mobile number is 10\");\r\n    }\r\n    else if(!this.isNumber(this.account.mobileNumber)){\r\n      swal.fire(\"Mobile number should be number!\")\r\n    }\r\n    else if(!this.isNumber(this.account.address.pinCode)){\r\n      swal.fire(\"Pincode should be number!\")\r\n    }\r\n    else if (!this.account.address.houseNumber.trim()) {\r\n      swal.fire(\"Please provide house number\");\r\n    }\r\n\r\n    else if (!this.account.address.city.trim()) {\r\n      swal.fire(\"Please provide City Name\");\r\n    }\r\n    else if (!this.account.address.state.trim()) {\r\n      swal.fire(\"Please provide State\");\r\n    }\r\n    else if (this.account.address.pinCode.length<6 || this.account.address.pinCode.length>6) {\r\n      swal.fire(\"Required length for pin code should be 6\");\r\n    }\r\n    else if (!this.account.balance) {\r\n      swal.fire(\"Please provide Balance\");\r\n    }\r\n\r\n    else {\r\n      this.account.status = 'ACTIVE';\r\n      this.generateUUID();\r\n\r\n      const promise = this.accountservice.save(this.account);\r\n      promise.subscribe(response => {\r\n        console.log(response);\r\n        swal.fire({\r\n          title: 'Account Created',\r\n          text: \"Your account number is :\" + this.account.number,\r\n          icon: 'success'\r\n        })\r\n\r\n      },\r\n        error => {\r\n          console.log(error);\r\n          swal.fire('error hapenned..')\r\n        })\r\n    }\r\n  }\r\n\r\n  //--------------Generating account number----------------\r\n  generateUUID() {\r\n    const generatedUuid1 = uuidv4();\r\n    //const generatedUuid2 = uuidv4();\r\n    const numericUuid1 = parseInt(generatedUuid1, 16);\r\n    //const numericUuid2 = parseInt(generatedUuid2, 16) ;\r\n    // const numericUuid3 = Math.round(numericUuid2)\r\n     const stringUuid1 = numericUuid1.toString();\r\n    const stringUuid2 = \"88890\";\r\n\r\n    // this.account.number = stringUuid1 + stringUuid2;\r\n    this.account.number=stringUuid2+stringUuid1;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<nav style=\"background-color: rgb(230, 227, 227);height: 25px;\">\r\n\r\n  <a class=\"nav-link ml-auto\" style=\"padding-top: 0px;float:right;padding-right: 23px;\" routerLink=\"/\"\r\n    routerLinkActive=\"active\"><b>Back</b></a>\r\n\r\n</nav>\r\n\r\n<form class=\"createAccount\" id='createAccount'>\r\n  <h5 style=\"font-weight: bold;font-size:x-large;\">Create Account</h5>\r\n  <br>\r\n  <div class=\"row fieldRow\">\r\n    <div class=\"col-sm-6\">\r\n      <label>First Name<span>*</span></label>\r\n      <input [(ngModel)]='account.firstName' class=\"form-control\" id='fname' name=\"fname\" required>\r\n\r\n    </div>\r\n\r\n    <div class=\"col-sm-6\">\r\n      <label>Last Name<span>*</span></label>\r\n      <input [(ngModel)]='account.lastName' class=\"form-control\" id='lname' name=\"lname\" required>\r\n\r\n    </div>\r\n  </div>\r\n  <div class=\"row fieldRow\">\r\n    <div class=\"col-sm-6\">\r\n      <label>Mobile Number<span>*</span></label>\r\n      <input [(ngModel)]='account.mobileNumber' pattern=\"[0-9]{10}\" type=\"tel\"\r\n        class=\"form-control\" id='mobile' name=\"mobile\" maxlength=\"10\" minlength=\"10\" required>\r\n\r\n\r\n      <!-- <div *ngIf=' account.mobileNumber.length!=10' class=\"alert alert-danger\"> Invalid Mobile Number(should be 10\r\n        digit)\r\n        <div [hidden]=\"!mobileref.errors?.pattern\">\r\n          Invalid Mobile Number!\r\n        </div>\r\n      </div> -->\r\n\r\n    </div>\r\n    <div class=\"col-sm-6\">\r\n      <label>Email Id</label>\r\n      <input [(ngModel)]='account.email' type=\"email\"\r\n        pattern=\"[A-Za-z0-9!#$%&'*+\\/=?^_`{|}~.-]+@[a-zA-Z0-9-]+(\\.[a-zA-Z0-9-]+)*\" type=\"text\" class=\"form-control\"\r\n        id='email' name=\"email\" #emailref=\"ngModel\" required>\r\n      <div *ngIf=\"emailref.errors &&(emailref.touched || emailref.dirty)\" class=\"alert alert-danger\">\r\n        <div [hidden]=\"!emailref.errors?.pattern\">\r\n          Invalid Email address\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n  <div class=\"row fieldRow\">\r\n    <div class=\"col-sm-6\">\r\n      <label>Address H/No.<span>*</span></label>\r\n      <input [(ngModel)]='account.address.houseNumber' maxlength=100 type=\"text\" class=\"form-control\" id='house'\r\n        name=\"name\" required>\r\n    </div>\r\n\r\n    <div class=\"col-sm-6\">\r\n\r\n      <label>City<span>*</span></label>\r\n      <input [(ngModel)]='account.address.city' class=\"form-control\" name=\"City\">\r\n\r\n    </div>\r\n  </div>\r\n  <div class=\"row fieldRow\">\r\n    <div class=\"col-sm-6\">\r\n      <label>State<span>*</span></label>\r\n      <input [(ngModel)]='account.address.state' class=\"form-control\" id='sname' name=\"sname\" required>\r\n\r\n    </div>\r\n\r\n    <div class=\"col-sm-6\">\r\n      <label>Pin Code <span>*</span> </label>\r\n      <input [(ngModel)]='account.address.pinCode' class=\"form-control\" maxlength=\"6\" minlength=\"6\" name=\"lname\">\r\n\r\n    </div>\r\n  </div>\r\n  <div class=\"row fieldRow\">\r\n    <div class=\"col-sm-6\">\r\n      <label>Status<span>*</span></label>\r\n      <select [(ngModel)]='account.status' class=\"form-control\" id='status' name=\"status\">\r\n        <option value=\"ACTIVE\">ACTIVE</option>\r\n        <option value=\"INACTIVE\" disabled>INACTIVE</option>\r\n        <option value=\"CLOSED\" disabled>CLOSED</option>\r\n      </select>\r\n    </div>\r\n\r\n\r\n    <div class=\"col-sm-6\">\r\n      <label>Type<span>*</span></label>\r\n      <select [(ngModel)]='account.type' name=\"type\" class=\"form-control\" id='type'>\r\n        <option value=\"SAVINGS\">SAVINGS</option>\r\n        <option value=\"CURRENT\">CURRENT</option>\r\n\r\n      </select>\r\n    </div>\r\n\r\n  </div>\r\n\r\n  <div class=\"row fieldRow\">\r\n    <div class=\"col-sm-6\">\r\n      <label>Balance<span>*</span></label>\r\n      <input [(ngModel)]='account.balance' class=\"form-control\" id='balancer' name=\"balance\" minlength=\"12\"\r\n        maxlength=\"17\">\r\n\r\n    </div>\r\n\r\n  </div>\r\n\r\n  <button (click)='save()' class=\"btn btn-primary btn-block\" style=\"margin-bottom: 50px;width:100%\">Save</button>\r\n</form>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Account } from '../Account';\r\nimport { Address } from '../Address';\r\nimport { AccountService } from '../account.service';\r\nimport swal from 'sweetalert2';\r\n@Component({\r\n  selector: 'app-search-account',\r\n  templateUrl: './search-account.component.html',\r\n  styleUrls: ['./search-account.component.css']\r\n})\r\nexport class SearchAccountComponent implements OnInit {\r\n  accountArray:Account[]=[];\r\n  account:Account=new Account(); //model -stores all form data\r\n\r\n  accountResult: any;\r\n   accountList: any;\r\n\r\n  constructor(private accountservice: AccountService) { }\r\n\r\n  //--------------get details of ustomer using account number------------\r\n  getAccountbyNumber(number:any)\r\n  {\r\n    const accountNumber =number;\r\n\r\n      if(accountNumber!=null){\r\n        const promise = this.accountservice.getAccountbyNumber(accountNumber);\r\n      promise.subscribe(response=> {\r\n        this.accountResult = [response];\r\n        if (this.accountResult!=0) {\r\n          this.accountArray = this.accountResult;\r\n          console.log(response);\r\n\r\n        }\r\n        else {\r\n          swal.fire({\r\n            icon:\"error\",\r\n            text:\"No Account found for account number:  \"+number});\r\n        }\r\n      },\r\n        error => {\r\n          console.log(error);\r\n          swal.fire({\r\n            icon:\"error\",\r\n            text:\"Enter Account Number \"});\r\n        });\r\n      }\r\n\r\n\r\n  }\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"search-account.component.css\">\r\n\r\n</head>\r\n<body>\r\n  <nav style=\"background-color: rgb(230, 227, 227);height: 25px;\">\r\n\r\n    <a\r\n      class=\"nav-link ml-auto\"\r\n      style=\"padding-top: 0px;float:right;padding-right: 23px;\"\r\n      routerLink=\"/customer\"\r\n      routerLinkActive=\"active\"\r\n      ><b>Back</b></a\r\n    >\r\n\r\n</nav>\r\n  <div style=\"margin:50px\">\r\n  <h5>Find Account Details</h5>\r\n  <div class=\"row formContainer\">\r\n    <form id='accountsearchform'>\r\n      <div  style=\"margin:20px\">\r\n       <label>Account Number</label>\r\n       <input [(ngModel)]='account.number' class=\"form-control\" id='number'  name=\"number\">\r\n      </div>\r\n\r\n    </form>\r\n\r\n      <button (click)=' getAccountbyNumber(account.number)' class=\"btn btn-primary btn-block searchBtn\">Search</button>\r\n\r\n  </div>\r\n\r\n            <div class=\"table-responsive\">\r\n  <table class=\"table table-striped table-bordered\">\r\n    <tr>\r\n      <th>First Name</th>\r\n      <th>Last Name</th>\r\n      <th>H/No.</th>\r\n\r\n      <th>City</th>\r\n\r\n      <th>Status</th>\r\n      <th>Type</th>\r\n      <th>Balance</th>\r\n      <th>Mobile Number</th>\r\n      <th>Email Id</th>\r\n\r\n\r\n\r\n    </tr>\r\n    <tr *ngFor='let acc of accountArray'>\r\n      <td>{{acc.firstName}}</td>\r\n      <td>{{acc.lastName}}</td>\r\n      <td>{{acc.address.houseNumber}}</td>\r\n\r\n      <td>{{acc.address.city}}</td>\r\n\r\n      <td>{{acc.status}}</td>\r\n      <td>{{acc.type}}</td>\r\n      <td>{{acc.balance}}</td>\r\n      <td>{{ acc.mobileNumber }}</td>\r\n        <td>{{ acc.email }}</td>\r\n\r\n    </tr>\r\n  </table>\r\n  </div>\r\n   </div>\r\n","export class User {\r\n  constructor(){\r\n      this.username = '';\r\n      this.password = '';\r\n  }\r\n  public username:any;\r\n  public password:any;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Account } from '../Account';\r\nimport { AccountService } from '../account.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-withdraw',\r\n  templateUrl: './withdraw.component.html',\r\n  styleUrls: ['./withdraw.component.css']\r\n})\r\nexport class WithdrawComponent implements OnInit {\r\n  title: String = \"Update Account Details\";\r\n  account: Account = new Account();\r\n  accountArray: any;\r\n  currentStatus: any;\r\n\r\n  constructor(private accountService: AccountService) { }\r\n\r\n  //----------------fetch details by account number---------------\r\n  searchAccountByNumber(number: any) {\r\n\r\n    let URL = 'http://localhost:8081/account/';\r\n    let accountNumber = (<HTMLInputElement>document.getElementById('number')).value;\r\n    if (accountNumber) {\r\n      URL = URL + 'number/' + accountNumber;\r\n      const observable = this.accountService.getAccountbyNumber(accountNumber);\r\n      observable.subscribe(response => {\r\n        this.accountArray = response;\r\n        if (this.accountArray) {\r\n          this.account = this.accountArray\r\n        }\r\n        else {\r\n          Swal.fire({\r\n            text: \"Enter a valid account number\",\r\n            icon: 'warning'\r\n          });\r\n        }\r\n      },\r\n        (error: any) => {\r\n          console.log(error);\r\n          Swal.fire({\r\n            text: \"Enter a valid Account Number\",\r\n            icon: 'error'\r\n          });\r\n        })\r\n    }\r\n    else {\r\n      Swal.fire({\r\n        text: \"Enter a valid account number\",\r\n        icon: 'warning',\r\n      })\r\n    }\r\n  }\r\n\r\n  //------------------update details---------------------\r\n  update() {\r\n    if (this.account.status != \"ACTIVE\") {\r\n      Swal.fire(\"Your Account is not Active!\")\r\n    }\r\n    else {\r\n      if (this.account.number) {\r\n\r\n        if (this.account.withdrawAmount) {\r\n\r\n          if (this.account.withdrawAmount != 0) {\r\n\r\n            if (this.account.balance >= this.account.withdrawAmount) {\r\n\r\n              Swal.fire({\r\n                title: 'Confirm Withdraw?',\r\n                text: 'Are you sure about withdrawing Rs:' + this.account.withdrawAmount + '?',\r\n                showDenyButton: true,\r\n                confirmButtonText: `Withdraw`,\r\n                denyButtonText: `Cancel`,\r\n              }).then((result) => {\r\n\r\n                if (result.isConfirmed) {\r\n\r\n                  this.account.balance = this.account.balance - this.account.withdrawAmount;\r\n                  const promise = this.accountService.updateAccount(this.account, this.account.id);\r\n                  promise.subscribe((response: any) => {\r\n                    console.log(response);\r\n                    this.accountArray[response];\r\n\r\n                    Swal.fire({\r\n                      title: 'Thank you for banking with us...!',\r\n                      text: \"Amount Withdrawn : \" + this.account.withdrawAmount + \"\\n Available Balance : \" + this.account.balance,\r\n                      icon: 'success'\r\n                    });\r\n                  },\r\n                    error => {\r\n                      console.log(error);\r\n                      Swal.fire(\"Error occured..! \\n Try Again\");\r\n                    })\r\n\r\n                } else if (result.isDenied) {\r\n                  Swal.fire({\r\n                    text: \"Your transaction is Cancelled!!!\",\r\n                    icon: 'error'\r\n                  });\r\n                }\r\n              })\r\n            }\r\n\r\n            else {\r\n              Swal.fire({\r\n                text: \"Enter an amount less than or equal to \" + this.account.balance,\r\n                icon: 'warning',\r\n              });\r\n            }\r\n          }\r\n\r\n          else {\r\n            Swal.fire({\r\n              text: \"Enter an amount greater than zero \",\r\n              icon: 'warning',\r\n            });\r\n          }\r\n        }\r\n\r\n        else {\r\n          Swal.fire({\r\n            text: \"Please enter a valid amount to withdraw\",\r\n            icon: 'warning'\r\n          })\r\n        }\r\n      }\r\n\r\n      else {\r\n        Swal.fire({\r\n          text: \"Enter a valid account number\",\r\n          icon: 'warning',\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n\r\n","<nav style=\"background-color: rgb(230, 227, 227);height: 25px;\">\r\n\r\n  <a class=\"nav-link ml-auto\" style=\"padding-top: 0px;float:right;padding-right: 23px;\" routerLink=\"/customer\"\r\n    routerLinkActive=\"active\"><b>Back</b></a>\r\n\r\n</nav>\r\n<form class=\"createAccount\" id=\"createAccount\" style=\"margin-top: 30px\">\r\n  <h5 style=\"font-weight: bold; font-size: x-large; color: #0450a0\">\r\n    Withdraw\r\n  </h5>\r\n  <br />\r\n  <div class=\"row fieldRow\" style=\"color: #0450a0\">\r\n    <div class=\"col-sm-12\" style=\"color: #0450a0\">\r\n      <label for=\"lname\">AccountNumber<span>*</span></label>\r\n      <input [(ngModel)]=\"account.number\" class=\"form-control\" id=\"number\" placeholder=\"Account Number\" name=\"number\" />\r\n      <br />\r\n\r\n      <button class=\"btn btn-primary\" (click)=\"searchAccountByNumber(account.number)\" style=\"width:100%\">\r\n        Search\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <div class=\"row fieldRow\" style=\"color: #0450a0\">\r\n    <div class=\"col-sm-6\">\r\n      <label>First Name</label>\r\n      <input [(ngModel)]=\"account.firstName\" maxlength=\"100\" type=\"text\" class=\"form-control\" id=\"fname\" name=\"name\"\r\n        disabled required />\r\n    </div>\r\n\r\n    <div class=\"col-sm-6\" style=\"color: #0450a0\">\r\n      <label>Last Name</label>\r\n      <input [(ngModel)]=\"account.lastName\" class=\"form-control\" id=\"lname\"  name=\"lname\"\r\n        disabled />\r\n    </div>\r\n  </div>\r\n  <div class=\"row fieldRow\">\r\n    <div class=\"col-sm-6\" style=\"color: #0450a0\">\r\n      <label>Balance</label>\r\n      <input [(ngModel)]=\"account.balance\" type=\"text\" class=\"form-control\"  id=\"balance\"\r\n        name=\"balance\" disabled required />\r\n    </div>\r\n    <div class=\"col-sm-6\" style=\"color: #0450a0\">\r\n      <label>Amount to be withdrawn : </label>\r\n      <input [(ngModel)]=\"account.withdrawAmount\" type=\"text\" class=\"form-control\" id=\"withdrawamount\"\r\n        name=\"withdrawamount\" required />\r\n    </div>\r\n  </div>\r\n  <button (click)=\"update()\" class=\"btn btn-primary btn-block\" style=\"width=100%\"> Withdraw\r\n  </button>\r\n</form>\r\n\r\n\r\n<div class=\"row fieldRow\">\r\n  <div class=\"col-sm-6\" style=\"color: #0450a0\">\r\n    <!-- <label >Address H/No.<span>*</span></label> -->\r\n    <input [(ngModel)]=\"account.address.houseNumber\" maxlength=\"100\" type=\"hidden\" class=\"form-control\" id=\"house\"\r\n      placeholder=\"Address\" name=\"housename\" id=\"housename\" required />\r\n  </div>\r\n\r\n  <div class=\"col-sm-6\" style=\"color: #0450a0\">\r\n    <!-- <label >City</label> -->\r\n    <input [(ngModel)]=\"account.address.city\" class=\"form-control\"  name=\"City\" id=\"city\"\r\n      type=\"hidden\" />\r\n  </div>\r\n</div>\r\n<div class=\"row fieldRow\">\r\n  <div class=\"col-sm-6\" style=\"color: #0450a0\">\r\n    <!-- <label >State</label> -->\r\n    <input [(ngModel)]=\"account.address.state\" maxlength=\"100\" type=\"hidden\" class=\"form-control\"\r\n      name=\"state\" id=\"state\" required />\r\n  </div>\r\n\r\n  <div class=\"col-sm-6\" style=\"color: #0450a0\">\r\n    <!-- <label >Pin Code <span>*</span> </label> -->\r\n    <input [(ngModel)]=\"account.address.pinCode\" type=\"hidden\" class=\"form-control\"  id=\"pincode\"\r\n      name=\"pincode\" />\r\n  </div>\r\n</div>\r\n<div class=\"row fieldRow\">\r\n  <div class=\"col-sm-6\" style=\"color: #0450a0\">\r\n    <!-- <label>Status</label> -->\r\n    <select style=\"display: none\" [(ngModel)]=\"account.status\" class=\"form-control\" id=\"status\" name=\"status\" disabled>\r\n      <option value=\"ACTIVE\">ACTIVE</option>\r\n      <option value=\"INACTIVE\">INACTIIVE</option>\r\n      <option value=\"CLOSED\">CLOSED</option>\r\n    </select>\r\n  </div>\r\n\r\n  <div class=\"col-sm-6\" style=\"color: #0450a0\">\r\n    <!-- <label>Type</label> -->\r\n    <select style=\"display: none\" [(ngModel)]=\"account.type\" name=\"type\" class=\"form-control\" id=\"type\" disabled>\r\n      <option value=\"SAVINGS\">SAVINGS</option>\r\n      <option value=\"CURRENT\">CURRENT</option>\r\n    </select>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Account } from '../Account';\r\nimport { AccountService } from '../account.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-deposit',\r\n  templateUrl: './deposit.component.html',\r\n  styleUrls: ['./deposit.component.css']\r\n})\r\nexport class DepositComponent implements OnInit {\r\n  title: String = \"Update Account Details\";\r\n  account: Account = new Account();\r\n  accountArray: any;\r\n  currentStatus: any;\r\n  accountResult: any;\r\n\r\n  constructor(private accountService: AccountService) { }\r\n//-----------------search customer details using account number--------------\r\n  searchAccountByNumber(number: any) {\r\n\r\n    let URL = 'http://localhost:8081/account/';\r\n    let accountNumber = (<HTMLInputElement>document.getElementById('number')).value;\r\n    if (accountNumber) {\r\n      URL = URL + 'number/' + accountNumber;\r\n      const observable = this.accountService.getAccountbyNumber(accountNumber);\r\n      observable.subscribe(response => {\r\n        this.accountArray = response;\r\n        console.log(\"sucess\");\r\n        if (this.accountArray) {\r\n          this.account = this.accountArray\r\n        }\r\n        else {\r\n          Swal.fire({\r\n            text: \"Enter a valid account number\",\r\n            icon: 'warning'\r\n          });\r\n        }\r\n      },\r\n        (error: any) => {\r\n          Swal.fire({\r\n            text: \"Enter a valid Account Number\",\r\n            icon: 'error'\r\n          });\r\n        }\r\n      )\r\n    }\r\n    else {\r\n      Swal.fire({\r\n        text: \"Enter a valid account number\",\r\n        icon: 'warning',\r\n      })\r\n    }\r\n  }\r\n\r\n  // -------------check if argument is number or not--------------\r\n  isNumber(n: any) {\r\n    return !isNaN(parseFloat(n)) && !isNaN(n - 0);\r\n  }\r\n//--------------customer can deposit certain amount which is updated in database---------------------\r\n  deposit() {\r\n    if (this.account.status != \"ACTIVE\") {\r\n      Swal.fire(\"Your Account is not Active!\")\r\n    }\r\n    else {\r\n      if (this.isNumber(this.account.depositAmount)) {\r\n\r\n        if (this.account.number) {\r\n\r\n          if (this.account.depositAmount) {\r\n\r\n            if (this.account.depositAmount != 0) {\r\n\r\n              Swal.fire({\r\n                title: 'Confirm Deposit?',\r\n                text: 'Are you sure about depositing Rs:' + this.account.depositAmount + '?',\r\n                showDenyButton: true,\r\n                confirmButtonText: `Deposit`,\r\n                denyButtonText: `Cancel`,\r\n              }).then((result) => {\r\n\r\n                if (result.isConfirmed) {\r\n\r\n                  var a: number = +this.account.balance\r\n                  var b: number = +this.account.depositAmount\r\n                  a += b;\r\n                  this.accountArray.balance = a;\r\n\r\n                  const promise = this.accountService.updateAccount(this.account, this.account.id);\r\n                  promise.subscribe((response: any) => {\r\n                    console.log(response);\r\n\r\n                    this.accountArray[response];\r\n\r\n                    Swal.fire({\r\n                      title: 'Thank you for banking with us...!',\r\n                      text: \"Amount Deposited : \" + this.account.depositAmount + \"\\n Available Balance : \" + this.account.balance,\r\n                      icon: 'success'\r\n                    });\r\n                  },\r\n\r\n                    error => {\r\n                      console.log(error);\r\n                      Swal.fire(\"Error occured..! \\n Try Again\");\r\n\r\n                    })\r\n                } else if (result.isDenied) {\r\n                  Swal.fire({\r\n                    text: \"Your transaction is Cancelled!!!\",\r\n                    icon: 'error'\r\n                  });\r\n                }\r\n              })\r\n            }\r\n\r\n            else {\r\n              Swal.fire({\r\n                text: \"Enter an amount greater than zero \",\r\n                icon: 'warning',\r\n              });\r\n            }\r\n          }\r\n          else {\r\n            Swal.fire({\r\n              text: \"Please enter a valid amount to withdraw\",\r\n              icon: 'warning'\r\n            })\r\n          }\r\n        }\r\n        else {\r\n          Swal.fire({\r\n            text: \"Enter a valid account number\",\r\n            icon: 'warning',\r\n          })\r\n        }\r\n      } else {\r\n        Swal.fire({\r\n          text: \"Amount should be a number\",\r\n          icon: 'error',\r\n        })\r\n      }\r\n    }\r\n\r\n  }\r\n  ngOnInit(): void {\r\n  }\r\n\r\n\r\n}\r\n","<nav style=\"background-color: rgb(230, 227, 227);height: 25px;\">\r\n\r\n  <a\r\n    class=\"nav-link ml-auto\"\r\n    style=\"padding-top: 0px;float:right;padding-right: 23px;\"\r\n    routerLink=\"/customer\"\r\n    routerLinkActive=\"active\"\r\n    ><b>Back</b></a\r\n  >\r\n\r\n</nav>\r\n<form class=\"createAccount\" id='createAccount'>\r\n  <h5 style=\"margin-top: 30px;font-weight: bold;font-size:x-large;color: #0450a0\">Deposit</h5>\r\n  <br>\r\n  <div class=\"row fieldRow \"style=\"color:#0450a0\">\r\n\r\n    <div class=\"col-sm-12\">\r\n      <label for=\"lname\">AccountNumber<span>*</span></label>\r\n      <input\r\n        [(ngModel)]=\"account.number\"\r\n        class=\"form-control\"\r\n        id=\"number\"\r\n        name=\"number\"\r\n      />\r\n      <br />\r\n\r\n      <button\r\n        class=\"btn btn-primary\"\r\n        (click)=\"searchAccountByNumber(account.number)\"\r\n        style=\"width: 100%\"\r\n      >\r\n        Search\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <div class=\"row fieldRow\" style=\"color: #0450a0\">\r\n    <div class=\"col-sm-6\">\r\n      <label>First Name<span>*</span></label>\r\n      <input\r\n        [(ngModel)]=\"account.firstName\"\r\n        maxlength=\"100\"\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        id=\"fname\"\r\n        name=\"name\"\r\n        disabled\r\n        required\r\n      />\r\n    </div>\r\n\r\n    <div class=\"col-sm-6\">\r\n      <label>Last Name<span>*</span></label>\r\n      <input\r\n        [(ngModel)]=\"account.lastName\"\r\n        class=\"form-control\"\r\n        id=\"lname\"\r\n        name=\"lname\"\r\n        disabled\r\n      />\r\n    </div>\r\n\r\n    <div class=\"col-sm-12\" style=\"margin-top: 10px\">\r\n      <label>Amount to deposit<span>*</span></label>\r\n      <input\r\n        [(ngModel)]=\"account.depositAmount\"\r\n        class=\"form-control\"\r\n        id=\"dAmount\"\r\n        name=\"amount\"\r\n      />\r\n\r\n      <button\r\n        (click)=\"deposit()\"\r\n        class=\"btn btn-primary btn-block\"\r\n        style=\"width: 100%; margin-top: 20px\"\r\n      >\r\n        Deposit\r\n      </button>\r\n\r\n      <!-- -----------------Disabled------------------------------ -->\r\n    </div>\r\n  </div>\r\n  <div class=\"row fieldRow\">\r\n    <div class=\"col-sm-6\">\r\n      <input\r\n        [(ngModel)]=\"account.address.houseNumber\"\r\n        maxlength=\"100\"\r\n        type=\"hidden\"\r\n        class=\"form-control\"\r\n        id=\"house\"\r\n        placeholder=\"Address\"\r\n        name=\"housename\"\r\n        id=\"housename\"\r\n        required\r\n      />\r\n    </div>\r\n\r\n    <div class=\"col-sm-6\">\r\n      <input\r\n        [(ngModel)]=\"account.address.city\"\r\n        class=\"form-control\"\r\n        type=\"hidden\"\r\n        placeholder=\"City\"\r\n        name=\"City\"\r\n        id=\"city\"\r\n      />\r\n    </div>\r\n  </div>\r\n  <div class=\"row fieldRow\">\r\n    <div class=\"col-sm-6\">\r\n      <input\r\n        [(ngModel)]=\"account.address.state\"\r\n        maxlength=\"100\"\r\n        type=\"hidden\"\r\n        class=\"form-control\"\r\n        placeholder=\"State\"\r\n        name=\"state\"\r\n        id=\"state\"\r\n        required\r\n      />\r\n    </div>\r\n\r\n    <div class=\"col-sm-6\">\r\n      <input\r\n        [(ngModel)]=\"account.address.pinCode\"\r\n        type=\"hidden\"\r\n        class=\"form-control\"\r\n        placeholder=\"Pincode\"\r\n        id=\"pincode\"\r\n        name=\"pincode\"\r\n      />\r\n    </div>\r\n  </div>\r\n  <div class=\"row fieldRow\">\r\n    <div class=\"col-sm-6\">\r\n      <select\r\n        style=\"display: none\"\r\n        [(ngModel)]=\"account.status\"\r\n        class=\"form-control\"\r\n        id=\"status\"\r\n        name=\"status\"\r\n        disabled\r\n      >\r\n        <option value=\"ACTIVE\">ACTIVE</option>\r\n        <option value=\"INACTIVE\">INACTIIVE</option>\r\n        <option value=\"CLOSED\">CLOSED</option>\r\n      </select>\r\n    </div>\r\n\r\n    <div class=\"col-sm-6\">\r\n      <select\r\n        style=\"display: none\"\r\n        [(ngModel)]=\"account.type\"\r\n        name=\"type\"\r\n        type=\"hidden\"\r\n        class=\"form-control\"\r\n        id=\"type\"\r\n        disabled\r\n      >\r\n        <option value=\"SAVINGS\">SAVINGS</option>\r\n        <option value=\"CURRENT\">CURRENT</option>\r\n      </select>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row fieldRow\">\r\n    <div class=\"col-sm-6\">\r\n      <input\r\n        [(ngModel)]=\"account.balance\"\r\n        maxlength=\"100\"\r\n        type=\"hidden\"\r\n        class=\"form-control\"\r\n        placeholder=\"Balance\"\r\n        id=\"balance\"\r\n        name=\"balance\"\r\n        disabled\r\n        required\r\n      />\r\n    </div>\r\n  </div>\r\n</form>\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { UpdateAccountComponent } from './update-account/update-account.component';\r\nimport { SearchAccountComponent } from './search-account/search-account.component';\r\nimport { AboutUsComponent } from './about-us/about-us.component';\r\nimport { HelpComponent } from './help/help.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { CreateAccountComponent } from './create-account/create-account.component';\r\nimport { SearchAllComponent } from './search-all/search-all.component';\r\nimport { EmployeelandComponent } from './employeeland/employeeland.component';\r\n\r\nimport { CustomerlandComponent } from './customerland/customerland.component';\r\n\r\nimport { DepositComponent } from './deposit/deposit.component';\r\nimport { CustomerUpdateComponent } from \"./customer-update/customer-update.component\";\r\nimport { WithdrawComponent } from './withdraw/withdraw.component';\r\n\r\nconst appRoutes: Routes = [\r\n  { path: '', component: HomeComponent },\r\n  { path: 'About', component: AboutUsComponent },\r\n  { path: 'Help', component: HelpComponent },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'createaccount', component: CreateAccountComponent },\r\n  { path: 'searchaccount', component: SearchAccountComponent },\r\n  { path: 'land', component: EmployeelandComponent },\r\n  { path: 'updateEmployee', component: UpdateAccountComponent },\r\n  { path: 'customer', component: CustomerlandComponent },\r\n  { path: 'searchall', component: SearchAllComponent },\r\n  { path: 'update', component: CustomerUpdateComponent },\r\n  { path: 'withdraw', component: WithdrawComponent },\r\n  { path: 'deposit', component: DepositComponent },\r\n\r\n\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    FooterComponent,\r\n    HomeComponent,\r\n    HeaderComponent,\r\n    UpdateAccountComponent,\r\n    SearchAccountComponent,\r\n    AboutUsComponent,\r\n    HelpComponent,\r\n    LoginComponent,\r\n    CreateAccountComponent,\r\n    SearchAllComponent,\r\n    EmployeelandComponent,\r\n    CustomerlandComponent,\r\n    DepositComponent,\r\n    CustomerUpdateComponent,\r\n    WithdrawComponent,\r\n  ],\r\n  imports: [RouterModule.forRoot(\r\n    appRoutes,\r\n    { enableTracing: true } // <-- debugging purposes only\r\n  ),\r\n    BrowserModule, FormsModule, HttpClientModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { User } from './models/user.model';\r\n\r\n@Injectable()\r\nexport class LoginService {\r\n\r\n\tconstructor(private http: HttpClient){\r\n\r\n\t}\r\n//--------------------validation----------------------\r\n\tvalidateLogin(user: User){\r\n\t\treturn this.http.post('/api/user/login',{\r\n\t\t\tusername : user.username,\r\n\t\t\tpassword : user.password\r\n\t\t})\r\n\t}\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Account } from '../Account';\r\nimport { AccountService } from '../account.service';\r\nimport swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-update-account',\r\n  templateUrl: './update-account.component.html',\r\n  styleUrls: ['./update-account.component.css']\r\n})\r\nexport class UpdateAccountComponent implements OnInit {\r\n  title: String = \"Update Account Details\";\r\n  account: Account = new Account();\r\n  accountArray: any;\r\n  currentStatus: any;\r\n\r\n\r\n  constructor(private accountService: AccountService) { }\r\n  //-------------fetch account details by account number----------------\r\n  searchAccountByNumber(number: any) {\r\n\r\n    let URL = 'http://localhost:8081/account/';\r\n    let accountNumber = (<HTMLInputElement>document.getElementById('number')).value;\r\n    if (accountNumber) {\r\n      URL = URL + 'number/' + accountNumber;\r\n      const observable = this.accountService.getAccountbyNumber(accountNumber);\r\n      observable.subscribe(response => {\r\n        this.accountArray = response;\r\n        // this.currentStatus = this.accountArray.status;\r\n        if (this.accountArray) {\r\n          this.account = this.accountArray\r\n        }\r\n        else {\r\n          swal.fire({\r\n            text: \"Enter a valid account number\",\r\n            icon: 'warning'\r\n          });\r\n        }\r\n      },\r\n        (error: any) => {\r\n          console.log(error);\r\n          swal.fire({\r\n            text: \"Error occured...! Try again\",\r\n            icon: 'error'\r\n          });\r\n        })\r\n    }\r\n    else {\r\n      swal.fire({\r\n        text: \"Please enter account number\",\r\n        icon: 'warning',\r\n      })\r\n    }\r\n  }\r\n\r\n//------check argument is number or not\r\n  isNumber(n: any) {\r\n    return !isNaN(parseFloat(n)) && !isNaN(n - 0);\r\n  }\r\n\r\n  //----------------update details---------------------\r\n  update() {\r\n\r\n    if (this.account.mobileNumber.length < 10 || this.account.mobileNumber.length > 10) {\r\n      swal.fire(\"Required length for mobile number is 10\");\r\n    }\r\n    else if (!this.isNumber(this.account.mobileNumber)) {\r\n      swal.fire(\"Mobile number should be number!\")\r\n    }\r\n    else if (!this.isNumber(this.account.address.pinCode)) {\r\n      swal.fire(\"Pincode should be number!\")\r\n    }\r\n    else {\r\n      const promise = this.accountService.updateAccount(this.account, this.account.id);\r\n      promise.subscribe((response: any) => {\r\n        console.log(response);\r\n        this.accountArray[response];\r\n\r\n        swal.fire({\r\n          title: 'Do you want to update the changes?',\r\n          showDenyButton: true,\r\n          confirmButtonText: `Update`,\r\n          denyButtonText: `Don't Update`,\r\n        }).then((result) => {\r\n\r\n          if (result.isConfirmed) {\r\n            swal.fire('Updated!', '', 'success')\r\n          } else if (result.isDenied) {\r\n            swal.fire('Changes are not updated', '', 'info')\r\n          }\r\n        })\r\n\r\n      },\r\n\r\n        error => {\r\n          console.log(error);\r\n          swal.fire({\r\n            icon: \"error\",\r\n            text: \"Update not possible\"\r\n          });\r\n\r\n        })\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<nav style=\"background-color: rgb(230, 227, 227);height: 25px;\">\r\n\r\n  <a\r\n    class=\"nav-link ml-auto\"\r\n    style=\"padding-top: 0px;float:right;padding-right: 23px;\"\r\n    routerLink=\"/land\"\r\n    routerLinkActive=\"active\"\r\n    ><b>Back</b></a\r\n  >\r\n\r\n</nav>\r\n<form class=\"createAccount\" id='createAccount'style=\"margin-top:30px\">\r\n  <h5 style=\"font-weight: bold;font-size:x-large;color:#0450a0\">Update Account</h5>\r\n  <br>\r\n  <div class=\"row fieldRow \"style=\"color:#0450a0\">\r\n    <div class=\"col-sm-12\">\r\n      <label for=\"lname\">AccountNumber<span>*</span></label>\r\n      <input [(ngModel)]='account.number'minlength=\"12\" maxlength=\"17\"class=\"form-control\" id='number' name=\"number\">\r\n      <br>\r\n\r\n      <button class=\"btn btn-primary\" (click)=\"searchAccountByNumber(account.number)\"style=\"width:100%\">Get Details</button>\r\n\r\n    </div>\r\n  </div>\r\n  <div class=\"row fieldRow\"style=\"color:#0450a0\">\r\n    <div class=\"col-sm-6\">\r\n      <label >First Name</label>\r\n      <input [(ngModel)]='account.firstName' maxlength=100 type=\"text\" class=\"form-control\" id='fname'\r\n        name=\"name\" required>\r\n    </div>\r\n\r\n    <div class=\"col-sm-6\">\r\n      <label>Last Name</label>\r\n      <input [(ngModel)]='account.lastName' class=\"form-control\" id='lname' name=\"lname\">\r\n\r\n    </div>\r\n  </div>\r\n  <div class=\"row fieldRow\" style=\"color:#0450a0\" >\r\n    <div class=\"col-sm-6\">\r\n      <label >Email Id</label>\r\n      <input [(ngModel)]='account.email'  type=\"text\" class=\"form-control\" id='email'\r\n        name=\"email\" required>\r\n    </div>\r\n\r\n    <div class=\"col-sm-6\">\r\n      <label>Mobile Number</label>\r\n      <input [(ngModel)]='account.mobileNumber' class=\"form-control\" id='mobile'  name=\"mobile\" required>\r\n\r\n    </div>\r\n  </div>\r\n  <div class=\"row fieldRow\"style=\"color:#0450a0\">\r\n    <div class=\"col-sm-6\">\r\n      <label >Address H/No.</label>\r\n      <input [(ngModel)]='account.address.houseNumber' maxlength=100 type=\"text\" class=\"form-control\" id='house'\r\n       name=\"housename\" id=\"housename\" required>\r\n    </div>\r\n\r\n    <div class=\"col-sm-6\">\r\n\r\n      <label >City</label>\r\n      <input [(ngModel)]='account.address.city' class=\"form-control\"  name=\"City\" id=\"city\">\r\n\r\n    </div>\r\n  </div>\r\n  <div class=\"row fieldRow\"style=\"color:#0450a0\">\r\n    <div class=\"col-sm-6\">\r\n      <label >State</label>\r\n      <input [(ngModel)]='account.address.state' maxlength=100 type=\"text\" class=\"form-control\"\r\n        name=\"state\" id=\"state\" required>\r\n    </div>\r\n\r\n    <div class=\"col-sm-6\">\r\n      <label >Pin Code </label>\r\n      <input [(ngModel)]='account.address.pinCode' class=\"form-control\"maxlength=\"6\" minlength=\"6\"  id=\"pincode\" name=\"pincode\">\r\n\r\n    </div>\r\n  </div>\r\n  <div class=\"row fieldRow\" style=\"color:#0450a0\">\r\n    <div class=\"col-sm-6\">\r\n      <label >Status</label>\r\n      <select [(ngModel)]='account.status' class=\"form-control\" id='status' name=\"status\">\r\n        <option value=\"ACTIVE\">ACTIVE</option>\r\n        <option value=\"INACTIVE\">INACTIVE</option>\r\n        <option value=\"CLOSED\">CLOSED</option>\r\n      </select>\r\n    </div>\r\n\r\n\r\n    <div class=\"col-sm-6\">\r\n      <label >Type</label>\r\n      <select [(ngModel)]='account.type' name=\"type\" class=\"form-control\" id='type'>\r\n        <option value=\"SAVINGS\">SAVINGS</option>\r\n        <option value=\"CURRENT\">CURRENT</option>\r\n\r\n      </select>\r\n    </div>\r\n\r\n  </div>\r\n\r\n  <div class=\"row fieldRow\" style=\"color:#0450a0\">\r\n    <div class=\"col-sm-6\">\r\n      <label >Balance</label>\r\n      <input [(ngModel)]='account.balance' maxlength=100 type=\"text\" class=\"form-control\"\r\n         id=\"balance\" name=\"balance\" disabled required>\r\n    </div>\r\n\r\n  </div>\r\n  <button (click)='update()' class=\"btn btn-primary btn-block\"style=\"width:100%\">Save</button>\r\n\r\n</form>\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AccountService } from '../account.service';\r\nimport { Directive, HostListener } from '@angular/core'\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  constructor(private accountservice: AccountService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<nav class=\"navbar navbar-expand-sm\"style=\"padding-bottom:0px\">\r\n  <a class=\"navbar-brand\" href=\"#\"> IBM BANK</a>\r\n\r\n  <!-- hamburger menu -->\r\n  <button\r\n    class=\"navbar-toggler\"\r\n    type=\"button\"\r\n    data-toggle=\"collapse\"\r\n    data-target=\"#collapsibleNavbar\"\r\n  >\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n\r\n  <!-- nav-bar icons and links -->\r\n  <div class=\"collapse navbar-collapse\" id=\"collapsibleNavbar\">\r\n    <ul class=\"navbar-nav ml-auto\">\r\n      <li class=\"nav-item selected\">\r\n        <a class=\"nav-link\" routerLink=\"/\" routerLinkActive=\"active\"><b>Home</b></a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a\r\n          class=\"nav-link\"\r\n          routerLink=\"/About\"\r\n          routerLinkActive=\"active\"\r\n          ><b>AboutUs</b></a\r\n        >\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a\r\n          class=\"nav-link\"\r\n          routerLink=\"/Help\"\r\n          routerLinkActive=\"active\"\r\n          ><b>T&C</b></a\r\n        >\r\n      </li>\r\n\r\n      <!-- <li class=\"nav-item\">\r\n        <a\r\n          class=\"nav-link\"\r\n          routerLink=\"/\"\r\n          routerLinkActive=\"active\"\r\n          ><b></b></a\r\n        >\r\n      </li> -->\r\n    </ul>\r\n  </div>\r\n</nav>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<footer id=\"footer\" >\r\n  <div class=\"footer-top\"style=\"padding-bottom:2px ;\">\r\n    <div class=\"container\">\r\n      <div class=\"row\">\r\n\r\n        <div class=\"col-lg-4 col-md-6 footer-info\">\r\n          <h3>IBM BANK</h3>\r\n          <p>IBM BANK, is a high quality, customer centric and service driven Bank. Since inception\r\n            in 2020, IBM BANK has grown into a ‘Full Service Commercial Bank’ providing a complete range of products,\r\n            services and technology driven digital offerings, catering to corporate, MSME & retail customers.</div>\r\n\r\n        <div class=\"col-lg-2 col-md-6 footer-links\">\r\n          <h4>Useful Links</h4>\r\n          <ul>\r\n            <li><a routerLink=\"/Help\" routerLinkActive=\"active\">Privacy & policy</a></li>\r\n            <li><a routerLink=\"/Help\" routerLinkActive=\"active\">Terms & conditions</a></li>\r\n\r\n          </ul>\r\n        </div>\r\n\r\n        <div class=\"col-lg-3 col-md-6 footer-contact\">\r\n          <h4>Contact Us</h4>\r\n          <p>\r\n            Subramanya Arcade Tower-C, Subramanya Arcade, Bannerghatta Main Rd,<br> Bengaluru, Karnataka 560029<br>\r\n\r\n            <strong>Phone:</strong> +91-8008008000<br>\r\n            <strong>Email:</strong> ibmindia@ibm.com<br>\r\n          </p>\r\n\r\n\r\n\r\n        </div>\r\n\r\n        <div class=\"col-lg-3 col-md-6 footer-newsletter\">\r\n          <h4>Our Newsletter</h4>\r\n          <p>For any query related to the bank, please feel free to contact us.</p>\r\n\r\n\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"container\">\r\n    <div class=\"copyright\">\r\n      &copy; 2021 Copyright <strong>IBM Bank</strong>. All Rights Reserved\r\n    </div>\r\n  </div>\r\n</footer>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-help',\r\n  templateUrl: './help.component.html',\r\n  styleUrls: ['./help.component.css']\r\n})\r\nexport class HelpComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<nav style=\"background-color: rgb(230, 227, 227);height: 25px;\">\r\n\r\n  <a\r\n    class=\"nav-link ml-auto\"\r\n    style=\"padding-top: 0px;float:right;padding-right: 23px;\"\r\n    routerLink=\"/\"\r\n    routerLinkActive=\"active\"\r\n    ><b>Back</b></a\r\n  >\r\n\r\n</nav>\r\n<form id=\"data\">\r\n  <div class=\"container\">\r\n    <div class=\"row\">\r\n      <div style=\"text-align:center\" class=\"column\">\r\n        <h2>Terms & Condition</h2>\r\n        <br>\r\n        <p>1. Customer understands and agrees that for processing financial transactions which includes RTGS, NEFT,\r\n          MTRF, Tax payment etc. and for account maintenance related activities, each instruction shall be supported\r\n          with electronic signatures of the Customer or the duly authorized person of the Customer.\r\n\r\n        </p><br>\r\n        <p>2. Customer understands and agrees that requests with electronic signatures raised to the Bank shall not be\r\n          separately sent later via any other medium (physical/email) to avoid duplication and Bank shall not be\r\n          responsible for any such duplicate request processed by it.\r\n\r\n        </p><br>\r\n        <p>3. The Customer declares and confirms that the Customer has for the Customer's convenience and after being\r\n          fully aware of, and having duly considered, the risks involved (which risks shall be borne fully by the\r\n          Customer) requested and authorised the Bank to act on instructions signed electronically.</p>\r\n      </div>\r\n      <div style=\"text-align:center\" class=\"column\">\r\n        <h2>Privacy Policy</h2>\r\n        <br>\r\n        <p>You agree that we may use Customer Information for the purpose of statistical analysis and for creation of\r\n          data (\"Statistical Information\"), which does not contain individual Customer Information.\r\n        </p><br>\r\n        <p>This Policy holds true for a non-customer who has provided information to the Bank, by any means, with the\r\n          intentions of establishing a relationship, of whatsoever nature, with the Bank. By divulging any information\r\n          to us you agree to the terms and conditions of this Policy.\r\n\r\n        </p><br>\r\n        <p><b>Security</b></p>\r\n        <p>\r\n          We have taken reasonable measures to protect security and confidentiality of the Customer Information and its\r\n          transmission through the World Wide Web. You are required to follow the Terms and Conditions while using this\r\n          Website including the instructions stated therein in respect of security and confidentiality of your Log-in\r\n          and Password.</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</form>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Account } from './Account';\r\nimport { Address } from './Address';\r\nconst URL = 'http://localhost:80/account/';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AccountService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  //--------------UPDATE methods-------------------------\r\n    updateAccount(Account: Account, id: any) {\r\n      return this.http.put(URL + '/' + id, Account, {\r\n        headers: { \"content-type\": 'application/json' }\r\n      })\r\n    }\r\n  //---------------POST methods----------------\r\n  save(account: Account) {\r\n    return this.http.post(URL, account, {\r\n      headers: { \"content-type\": 'application/json' },\r\n      responseType: \"text\"\r\n    });\r\n  }\r\n//----------------GET method--------------\r\n  getAccountbyNumber(accountNumber: any) {\r\n    return this.http.get(URL + 'number/' + accountNumber, {\r\n      headers: {\r\n        \"content-type\": 'application/json',\r\n        reponseType: 'text'\r\n      }\r\n    });\r\n  }\r\n//------------------GETALL method----------------\r\n  getAllAccounts() {\r\n    return this.http.get(URL);\r\n  }\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { LoginService } from '../login.service';\r\nimport { User } from '../models/user.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css'],\r\n  providers: [ LoginService ]\r\n})\r\nexport class LoginComponent {\r\n\r\n  public user : User;\r\n\r\n\r\n  constructor(private loginService: LoginService) {\r\n      this.user = new User();\r\n  }\r\n  //-----to refresh the page-----------\r\n  refresh(): void {\r\n    window.location.reload();}\r\n\r\n    //------------to do employee login only using the credentials below---\r\n  validateLogin() {\r\n    if(this.user.username==\"abhilasha@gmail.com\" && this.user.password==\"singh123\"||\r\n    this.user.username==\"rinky@gmail.com\" && this.user.password==\"rinky123\"||\r\n    this.user.username==\"akanksha@gmail.com\" && this.user.password==\"akku123\"||\r\n    this.user.username==\"rupak@gmail.com\" && this.user.password==\"rupak123\"||\r\n    this.user.username==\"henna@gmail.com\" && this.user.password==\"heena123\"){\r\n        this.loginService.validateLogin(this.user).subscribe(result => {\r\n        console.log('result is ', result);\r\n\r\n      }, error => {\r\n        console.log('error is ', error);\r\n\r\n      });\r\n    } else{\r\n      this.refresh();\r\n      alert('enter valid user name and password');\r\n\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\n","<nav style=\"background-color: rgb(230, 227, 227);height: 25px;\">\r\n\r\n  <a\r\n    class=\"nav-link ml-auto\"\r\n    style=\"padding-top: 0px;float:right;padding-right: 23px;\"\r\n    routerLink=\"/\"\r\n    routerLinkActive=\"active\"\r\n    ><b>Back</b></a\r\n  >\r\n\r\n</nav>\r\n<form class=\"form-signin\">\r\n  <h2 class=\"form-signin-heading\" style=\"text-align: center;\">Please sign in</h2>\r\n  <label for=\"inputEmail\" class=\"sr-only\">Email address</label>\r\n     <input name=\"email\" [(ngModel)] = \"user.username\" type=\"email\" id=\"inputEmail\" class=\"form-control\" placeholder=\"Email address\" required autofocus>\r\n\r\n     <label for=\"inputPassword\" class=\"sr-only\">Password</label>\r\n     <input name=\"password\" [(ngModel)] = \"user.password\" type=\"password\" id=\"inputPassword\" class=\"form-control\" placeholder=\"Password\" required>\r\n     <div class=\"checkbox\">\r\n       <label>\r\n         <input type=\"checkbox\" value=\"remember-me\"> Remember me\r\n       </label>\r\n     </div>\r\n <button routerLink=\"/land\" routerLinkActive=\"active\"class=\"btn btn-lg btn-primary btn-block\" style=\"margin-bottom: 20px\"(click)=\"validateLogin();\" type=\"button\">Sign in</button>\r\n</form>\r\n","export class Address{\r\n  houseNumber:string=\"\";\r\n  city:string='';\r\nstate:string='';\r\npinCode:any;\r\n\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}